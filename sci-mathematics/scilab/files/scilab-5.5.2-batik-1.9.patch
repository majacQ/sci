Updates Scilab to build against (and require) Batik >=1.9, this has been
adapted from Gentoo-Bug-URL: https://github.com/gentoo-science/sci/pull/456

--- a/configure
+++ b/configure
@@ -16600,8 +16600,8 @@ $as_echo "$as_me: WARNING: Could not find or use the Java package/jar batik used
                 fi
 
 
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking minimal version (1.7) of batik" >&5
-$as_echo_n "checking minimal version (1.7) of batik... " >&6; }
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking minimal version (1.9) of batik" >&5
+$as_echo_n "checking minimal version (1.9) of batik... " >&6; }
    saved_ac_java_classpath=$ac_java_classpath
    export ac_java_classpath="$BATIK:$ac_java_classpath"
    if test "x" == "x"; then
@@ -16614,7 +16614,7 @@ import org.apache.batik.Version;
 
 public class conftest {
     public static void main(String[] argv) {
-        String minVersion="1.7";
+        String minVersion="1.9";
 
                             System.out.println(Version.getVersion());
                                   if (compare(minVersion, Version.getVersion()) > 0) {
@@ -16663,7 +16663,7 @@ EOF
                    STDOUT=`cat conftest.java.output`
                 fi
                 echo "configure: CLASSPATH was $CLASSPATH" >&5
-                  as_fn_error $? "Wrong version of batik. Expected at least 1.7. Found $STDOUT" "$LINENO" 5
+                  as_fn_error $? "Wrong version of batik. Expected at least 1.9. Found $STDOUT" "$LINENO" 5
                             fi
         fi
         if test -f conftest.java.output; then
@@ -16673,7 +16673,7 @@ EOF
         echo "configure: failed program was:" >&5
         cat conftest.java >&5
         echo "configure: CLASSPATH was $CLASSPATH" >&5
-          as_fn_error $? "Wrong version of batik. Expected at least 1.7. Found $STDOUT" "$LINENO" 5
+          as_fn_error $? "Wrong version of batik. Expected at least 1.9. Found $STDOUT" "$LINENO" 5
             fi
 
    else
@@ -16686,7 +16686,7 @@ import org.apache.batik.Version;
 
 public class conftest {
     public static void main(String[] argv) {
-        String minVersion="1.7";
+        String minVersion="1.9";
 
                             System.out.println(Version.getVersion());
                                   if (compare(minVersion, Version.getVersion()) != 0) {
@@ -16735,7 +16735,7 @@ EOF
                    STDOUT=`cat conftest.java.output`
                 fi
                 echo "configure: CLASSPATH was $CLASSPATH" >&5
-                  as_fn_error $? "Wrong version of batik. Expected exact version 1.7. Found $STDOUT" "$LINENO" 5
+                  as_fn_error $? "Wrong version of batik. Expected exact version 1.9. Found $STDOUT" "$LINENO" 5
                             fi
         fi
         if test -f conftest.java.output; then
@@ -16745,7 +16745,7 @@ EOF
         echo "configure: failed program was:" >&5
         cat conftest.java >&5
         echo "configure: CLASSPATH was $CLASSPATH" >&5
-          as_fn_error $? "Wrong version of batik. Expected exact version 1.7. Found $STDOUT" "$LINENO" 5
+          as_fn_error $? "Wrong version of batik. Expected exact version 1.9. Found $STDOUT" "$LINENO" 5
             fi
 
     fi
--- a/configure.ac
+++ b/configure.ac
@@ -1038,7 +1038,7 @@ interface for JOGL2 - or libGL (OpenGL library) are installed and if the version
                    BATIK=$PACKAGE_JAR_FILE
                 fi
                 AC_SUBST(BATIK)
-                AC_JAVA_CHECK_VERSION_PACKAGE([batik],[import org.apache.batik.Version;],$BATIK,[1.7],[Version.getVersion()])
+                AC_JAVA_CHECK_VERSION_PACKAGE([batik],[import org.apache.batik.Version;],$BATIK,[1.9],[Version.getVersion()])
 
                 # Commons I/O library
                 AC_JAVA_CHECK_PACKAGE([commons-io],[org.apache.commons.io.output.CountingOutputStream],[Commons I/O library])
--- a/modules/graph/src/java/org/scilab/modules/graph/utils/ScilabGraphUtils.java
+++ b/modules/graph/src/java/org/scilab/modules/graph/utils/ScilabGraphUtils.java
@@ -28,7 +28,7 @@ import org.apache.batik.bridge.DocumentLoader;
 import org.apache.batik.bridge.GVTBuilder;
 import org.apache.batik.bridge.UserAgent;
 import org.apache.batik.bridge.UserAgentAdapter;
-import org.apache.batik.dom.svg.SAXSVGDocumentFactory;
+import org.apache.batik.anim.dom.SAXSVGDocumentFactory;
 import org.apache.batik.gvt.GraphicsNode;
 import org.apache.batik.util.XMLResourceDescriptor;
 import org.scilab.forge.jlatexmath.ParseException;
--- ./modules/xcos/src/java/org/scilab/modules/xcos/Xcos.java	2021-01-24 16:26:14.686473112 +0100
+++ ./modules/xcos/src/java/org/scilab/modules/xcos/Xcos.java.new	2021-01-24 16:34:25.486426923 +0100
@@ -100,7 +100,7 @@
      * Dependencies version
      */
     private static final List<String> MXGRAPH_VERSIONS = null;
-    private static final List<String> BATIK_VERSIONS = Arrays.asList("1.7", "1.8pre", "1.8");
+    private static final List<String> BATIK_VERSIONS = Arrays.asList("1.7", "1.8pre", "1.8", "1.9");
 
     private static final String UNABLE_TO_LOAD_JGRAPHX = Messages.gettext("Unable to load the jgraphx library.\nExpecting version %s ; Getting version %s .");
     private static final String UNABLE_TO_LOAD_BATIK = Messages.gettext("Unable to load the Batik library. \nExpecting version %s ; Getting version %s .");

