diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1be4117..ee4b34c 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -230,9 +230,6 @@ elseif(FETCH_BOOST)
     message("Build system will fetch and build Boost")
     message("==================================================================")
     ExternalProject_Add(libboost
-        DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external
-        DOWNLOAD_COMMAND curl -k -L  http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz -o boost_1_59_0.tar.gz &&
-                               tar xzf boost_1_59_0.tar.gz
         SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_59_0
         INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install
         #PATCH_COMMAND patch -p2 < ${CMAKE_CURRENT_SOURCE_DIR}/external/boost156.patch
@@ -292,10 +289,6 @@ if (NOT JELLYFISH_FOUND)
 message("Build system will fetch and build Jellyfish")
 message("==================================================================")
 ExternalProject_Add(libjellyfish
-    DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external
-    DOWNLOAD_COMMAND curl -k -L https://github.com/gmarcais/Jellyfish/releases/download/v2.2.5/jellyfish-2.2.5.tar.gz -o jellyfish-2.2.5.tgz &&
-    	rm -fr jellyfish-2.2.5 &&
-     	tar -xzvf jellyfish-2.2.5.tgz
     SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.5
     INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install
     CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.5/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}
@@ -335,11 +328,7 @@ if ("${TBB_COMPILER}" STREQUAL "gcc")
 endif()
 
 ExternalProject_Add(libtbb
-	DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external
-    URL http://www.threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb43_20140724oss_src.tgz
-    DOWNLOAD_COMMAND curl -k -L  http://www.threadingbuildingblocks.org/sites/default/files/software_releases/source/tbb43_20140724oss_src.tgz -o tbb_20140724oss_src.tgz &&
-                     tar -xzvf tbb_20140724oss_src.tgz
-    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/tbb43_20140724oss
+	SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/tbb43_20140724oss
     INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install
     PATCH_COMMAND "${TBB_PATCH_STEP}"
     CONFIGURE_COMMAND ""
@@ -407,11 +396,6 @@ message("TBB_LIBRARIES = ${TBB_LIBRARIES}")
 message("Build system will compile libgff")
 message("==================================================================")
 ExternalProject_Add(libgff
-    DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external
-    DOWNLOAD_COMMAND curl -k -L https://github.com/Kingsford-Group/libgff/archive/v1.0.tar.gz -o libgff.tgz &&
-    	tar -xzvf libgff.tgz &&
-        rm -fr libgff &&
-	    mv libgff-1.0 libgff
     SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/libgff
     UPDATE_COMMAND sh -c "mkdir -p <SOURCE_DIR>/build"
     INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install
@@ -445,9 +429,6 @@ if (NOT HAVE_FAST_MALLOC)
     message("Build system will fetch and use JEMalloc")
     message("==================================================================")
     ExternalProject_Add(libjemalloc
-        DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external
-        DOWNLOAD_COMMAND curl -k -L https://github.com/COMBINE-lab/jemalloc/archive/3.6.0.tar.gz -o jemalloc-3.6.0.tar.gz &&
-        tar -xzf jemalloc-3.6.0.tar.gz
         SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jemalloc-3.6.0
         BUILD_IN_SOURCE TRUE
         INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install
@@ -465,9 +446,6 @@ endif ()
 message("Build system will fetch and build SparseHash")
 message("==================================================================")
 ExternalProject_Add(libsparsehash
-    DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external
-    DOWNLOAD_COMMAND curl -k -L https://github.com/COMBINE-lab/sparsehash/archive/sparsehash-2.0.2.tar.gz -o sparsehash-2.0.2.tar.gz &&
-        tar -xzf sparsehash-2.0.2.tar.gz
     SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/sparsehash-sparsehash-2.0.2
     BUILD_IN_SOURCE TRUE
     INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install
@@ -487,7 +465,6 @@ ExternalProject_Add(libsparsehash
 #
 ####
 if(NOT FETCHED_RAPMAP)
-  exec_program(${CMAKE_CURRENT_SOURCE_DIR}/scripts/fetchRapMap.sh)
   set(FETCHED_RAPMAP TRUE CACHE BOOL "Has RapMap been fetched?" FORCE)
 endif()
 
diff --git a/scripts/fetchRapMap.sh b/scripts/fetchRapMap.sh
deleted file mode 100755
index cab05a1..0000000
--- a/scripts/fetchRapMap.sh
+++ /dev/null
@@ -1,37 +0,0 @@
-#!/bin/bash
-
-CURR_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
-EXTERNAL_DIR=${CURR_DIR}/../external
-INSTALL_DIR=${CURR_DIR}/../external/install
-
-if [ -d ${EXTERNAL_DIR}/RapMap ] ; then
-    rm -fr ${EXTERNAL_DIR}/RapMap
-fi
-
-if [ -d ${INSTALL_DIR}/include/rapmap ] ; then
-    rm -fr ${INSTALL_DIR}/include/rapmap
-fi
-
-if [ -d ${INSTALL_DIR}/src/rapmap ] ; then
-    rm -fr ${INSTALL_DIR}/src/rapmap
-fi
-
-mkdir -p ${EXTERNAL_DIR}
-curl -k -L https://github.com/COMBINE-lab/RapMap/archive/quasi-mph.zip -o ${EXTERNAL_DIR}/rapmap.zip
-rm -fr ${EXTERNAL_DIR}/RapMap
-unzip ${EXTERNAL_DIR}/rapmap.zip -d ${EXTERNAL_DIR}
-mv ${EXTERNAL_DIR}/RapMap-quasi-mph ${EXTERNAL_DIR}/RapMap
-
-mkdir -p ${INSTALL_DIR}/include/rapmap
-mkdir -p ${INSTALL_DIR}/src/rapmap
-
-rm ${EXTERNAL_DIR}/RapMap/src/xxhash.c
-rm ${EXTERNAL_DIR}/RapMap/include/xxhash.h
-
-cp -r ${EXTERNAL_DIR}/RapMap/external/libdivsufsort.zip ${EXTERNAL_DIR}
-cp -r ${EXTERNAL_DIR}/RapMap/src/*.c ${INSTALL_DIR}/src/rapmap
-cp -r ${EXTERNAL_DIR}/RapMap/src/*.cpp ${INSTALL_DIR}/src/rapmap
-cp -r ${EXTERNAL_DIR}/RapMap/include/tclap ${INSTALL_DIR}/include/rapmap
-cp -r ${EXTERNAL_DIR}/RapMap/include/*.h ${INSTALL_DIR}/include/rapmap
-cp -r ${EXTERNAL_DIR}/RapMap/include/*.hpp ${INSTALL_DIR}/include/rapmap
-cp -r ${EXTERNAL_DIR}/RapMap/include/emphf ${INSTALL_DIR}/include/rapmap
